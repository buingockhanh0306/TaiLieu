<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQ0AAAAiCAYAAABFn4xfAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABLFJREFUeF7tmQ1RKzEUhbGABizgAQlowAIOcIADFKAAAxjAAR76+Do9b+5kkm5u
        mt2Wcr6ZDEs2m5vcn7Npe7MzxpgEFg1jTAqLhjEmhUXDGJPComGMSWHRMMaksGgYY1JYNIwxKSwapsnX
        19fu5uZm356eng6954M1aD3mfNj7psnDw8Ph6idRfgr17e3t8N/2fHx8/LePeLy8vOyvzfZMF4339/fd
        /f39Pslub2/3Af7+/t49Pz8fRuTQs8zFnHd3d83kjeO45tkS+l5fX/fz9ECyMh9/M5yjwNa0SZFmThuz
        18KpRzB3Zn5iF5+/JM6RJ6cyVTQQDAqMohQ4hUKOb60Mj4+P+2dJ2igK0QYwDrEiORAGrkub9LNGxjLH
        EoxHXEZEY3S/p7CmTeKYebuvuZbsRyXWnY3fVsz0EzEiV9kv83K9hihNFQ0WWnPC5+fnkHMQgFIcmAtn
        xJOCnIUgCI2rOQ2ncm8JklMC89dFA19k3tZrrIUYEItWXFv8FdEA4qR8xUdZge1humhQzLWPBZm31BLY
        4cQhWieH1gmnRzRwOIKlsWuJBuOYXw07sknL+K3XZpxfNmJBlvMgFpl1QO9aot1oO/aVUAi984P2d4nM
        jhm+UazI4YyfepkqGtoExdp6E5RJ0mrHNsu9qKCM5+NICeO4V6IAtKBINL/GZpMuEyzZQPwE4rumzRgr
        gf3yZAeZeUXmGfytj4GcEIF1EIPaC4jxWf9mfbkVs2P260QDCLq+CCURWuIxir5niEdlbNWcQx/3SpZE
        g+eUrD2iITtL7dgcBJsxfMTieinJZ9gkNozhuyKulWwR7MjX3I9+F/LRUqvNL8gbioHc4ToKaElrraDC
        Wmrsa2u2iNmvFA3BgvX24K/eIKeCQ5g7go2acxSkEuao9QPBiEHT2KUiLskGC5GS2Nbe9j2MJIjEqlak
        9MeWmX9kLSoI8qU8YWidNK4zEMNs/LZiZszkP5ryVtczWU00BBvhDULjLXXKmwDhKQUDWuPp415JSzRY
        G6IR2Uo0QL8+jTwLI89RnNgkPmWhnsLoHiScM4v82kRjrZj1MlU0yoITKoZTFA/BiL+ORFBc5i+hrxaU
        lmgwlv5WywQ4mwwEn2c4ZWBrxFdZm4DvJOwjz7cYmYs9s3+EY2ZBXJtorBWzXqaKBhuofQzhhEEhjB67
        jwkG6FgWE4Nr+monk5ZoYIfnYtNRkLXX9tYiE0yKg0RQkSC+2Dy25xrZBGJv2pOEvSX8WbJrIU7KD/KF
        gkA8ZnBNorFmzHqZLhoEmwRQAZAAp7w5CDbzEvjYcF4UIcZgBxuy2QqIhKAnkbDVOzbSG0jWy1qjuNGH
        TXyWsZtJHnxAi7AO7I6KeySzFvbO9xgRnmctrHEkbyLMnxF8aIkW6+IeORZRAWd9d0kx62WqaOAAAkyh
        6UtQHMxGSyf3oEC0WkwmrrFDPza1lpJyjiWlHxWNXrCvtYjYt4Zt7SnOHfto/L8F2C9txj7aUozWgPyt
        2W2JhtYcxX8mlxSzqaJhjLl+LBrGmBQWDWNMCouGMSaFRcMYk8KiYYxJYdEwxqSwaBhjUlg0jDEpLBrG
        mBQWDWNMCouGMSbBbvcPQkMgjesuYEQAAAAASUVORK5CYII=
</value>
  </data>
</root>